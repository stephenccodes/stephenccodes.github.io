[
  {
    "objectID": "blog_posts.html",
    "href": "blog_posts.html",
    "title": "Blog",
    "section": "",
    "text": "An Analysis of the 2017 Thomas Fire\n\n\n\nQuarto\n\n\nPython\n\n\nMEDS\n\n\n\nA visualization of the extent and AQI impact\n\n\n\nStephen Carroll\n\n\nDec 4, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nBlog post 1\n\n\n\nQuarto\n\n\nMEDS\n\n\n\nA short catchy description of the blog post\n\n\n\nStephen Carroll\n\n\nOct 18, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nExaming the Impact on Fertilizer & Pesticide Use on Agricultural Labor Needs\n\n\n\nQuarto\n\n\nMEDS\n\n\n\nA deep dive into how the rapid rise in artificial inputs in the 20th century affected labor needs on farms.\n\n\n\nStephen Carroll\n\n\nOct 18, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog_posts/stats-project/pesticides-fertilizers-labor.html",
    "href": "blog_posts/stats-project/pesticides-fertilizers-labor.html",
    "title": "Examing the Impact on Fertilizer & Pesticide Use on Agricultural Labor Needs",
    "section": "",
    "text": "Final Project\nData - Source(s)? - Completeness? - Processing?\nExplore - Visualize - Summarize - Hypothesize\nAnalysis - Method? - Implementation? - Diagnostics?\nWhat is my hypothesis.\nDetermine the P-value.\nSpend a lot of time on the methods, explain research question, objective, where the data is from. Add citations where applicable. Does the data satisfy the needs of the analysis? EX: “ I need to do another test because my results aren’t robust enough”\nLinear or logistic regression based on hypothesis and data.\nDetermine/explain what the indexes are representative of.\nTidy the data, make it longer and compare state by region and make it a categorical variable for a logistic regression: “How likely is it that a state is in a given region based on the values for fert/pest use”. Or I could compare a state to the national average.\nRemove yield consideration from research question: it is already assumed that pest/fert affects yields.\nPotential OVB: is total area represented? because that affects yield.\nOutline\nIntro - Introduction - Data summary & citation - Determine what indices mean and what category of labor to look at - Research question & objective\nSetup - Load packages - Read in data\nData preparation - Remove extraneous rows/columns - Pivot longer - Add region column? - Convert indices to actual values?\nData exploration & processing - Visualize data -Trend analysis - Time-series plots - Seasonal, cyclical, or long term trend? - Correlation analysis - Correlation matrix - Scatter plots - Find the p-value - Hypo statements - Determine methods - Summary statistic(s) - Note missing data\nAnalysis - Labor is for USA so focus on a country average for all\n\nLinear regression\n\nPesticide vs Fertilizer\nLabor cost vs other variables\nTime trend for each variable\n\nMulti-linear regression\n\nUse different quartiles of fertilizer and pesticide use\n\nInteraction regression\n\nDo fertilizer use change determining on pesticide use and vice versa?\n\nResidual analysis\n\nModel fit: R^2 and p-values relative to alpha = 0.05\n\nTime???\n\nInterpretation - Coefficients\n\nTime Trends\nLimitations\n\nDiscuss possible OVB or other limitations on ability to draw meaningful conclusions due ot influence on trends\n\nTotal area in use\nTechnology changes\nPolicy changes\nEnvironmental changes\n\nInclude other information\n\nMacroeconomic trends\n\nInflation\nCost of living Housekeeping\n\n\n\nData citations\nSlide deck for presentation\nImages for blog\nAnalysis summary (1500 words)\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidyr)\nlibrary(here)\n\nhere() starts at C:/MEDS/EDS-296/stephenccodes.github.io\n\nlibrary(readxl)\n\nWarning: package 'readxl' was built under R version 4.4.2\n\n\n\ncrop_output &lt;- read_excel(here(“data/new_crop_output_state.xls”))\n\n# Read in pesticide data\npesticide &lt;- read_excel(here(\"blog_posts/stats-project/data/pesticide_consumption_state.xls\"), skip = 5, range = \"A6:AW53\")\n\npesticide_clean &lt;- pesticide[rowSums(is.na(pesticide)) &lt; ncol(pesticide), ]\n\npesticide_tidy &lt;- pesticide_clean %&gt;%\n  pivot_longer(cols = -Year, # Pivot all columns except Year\n               names_to = \"state\", # Create a new column \"State\" for state names\n               values_to = \"pesticide\") %&gt;% # The numeric values go into a new column \"Value\"\n  group_by(Year) %&gt;%\n  mutate(avg_pesticide = mean(pesticide)) %&gt;%\n  ungroup() %&gt;%\n  distinct(Year, .keep_all = TRUE) %&gt;% # Remove duplicate rows by year\n  select(Year, avg_pesticide)  # Keep only 'Year' and 'us_avg_pesticide'\n\n\n# Read in fertilizer data\nfertilizer &lt;- read_excel(here(\"blog_posts/stats-project/data/fertilizer_consumption_state.xls\"), skip = 5, range = \"A6:AW53\")\n\nfertilizer_clean &lt;- fertilizer[rowSums(is.na(fertilizer)) &lt; ncol(fertilizer), ]\n\nfertilizer_tidy &lt;- fertilizer_clean %&gt;%\n  pivot_longer(cols = -Year, # Pivot all columns except Year\n               names_to = \"state\", # Create a new column \"State\" for state names\n               values_to = \"fertilizer\") %&gt;%  # The numeric values go into a new column \"Value\"\n  group_by(Year) %&gt;%\n  mutate(avg_fertilizer = mean(fertilizer)) %&gt;%\n  ungroup() %&gt;%\n  distinct(Year, .keep_all = TRUE) %&gt;% # Remove duplicate rows by year\n  select(Year, avg_fertilizer)  # Keep only 'Year' and 'us_avg_pesticide'\n\n\n# Read in labor data\nlabor &lt;- read_csv(here(\"blog_posts/stats-project/data/labor_etc.csv\"))\n\nRows: 2220 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Attribute\ndbl (2): Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Filter rows in the 'labor' data frame where any column contains the word \"labor\"\nfiltered_labor &lt;- labor[apply(labor, 1, function(row) any(grepl(\"labor\", row, ignore.case = TRUE))), ]\n\n\n# Pivoting the data so that each attribute becomes its own column\nlabor_clean &lt;- filtered_labor %&gt;%\n  pivot_wider(\n    names_from = Attribute, # The column to spread into multiple columns\n    values_from = Value,   # The column to use as the values for each new column\n    names_prefix = \"Labor inputs: \"   # Adding a prefix to the new column names\n  )\n\n\n# Subset the labor data to keep only total labor index and hired labor index\nlabor_tidy &lt;- labor_clean[, c(\"Labor inputs: Labor inputs: Total\", \"Labor inputs: Labor inputs: Hired labor\", \"Year\"), drop = FALSE] %&gt;%\n  select(\"Year\", \"Labor inputs: Labor inputs: Total\", \"Labor inputs: Labor inputs: Hired labor\") %&gt;%\n   filter(Year &gt;= 1960) %&gt;%  # Filter for years 1960 and later\n  rename(\n    avg_total_labor = \"Labor inputs: Labor inputs: Total\",\n    avg_hired_labor = \"Labor inputs: Labor inputs: Hired labor\"\n  )\n\n\n# labor_tidy &lt;- labor_clean %&gt;%\n#   select(Year, 'Labor inputs: Labor inputs: Total') %&gt;%\n#   rename(total_labor = 'Labor inputs: Labor inputs: Total')\n\n\nggplot(fertilizer_tidy, aes(x = Year, y = avg_fertilizer)) +\n  geom_line()\n\n\n\n\n\n\n\n\n\nggplot(pesticide_tidy, aes(x = Year, y = avg_pesticide)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\nggplot(labor_tidy, aes(x = Year, y = avg_total_labor)) +\n  geom_line()\n\n\n\n\n\n\n\n\n\nggplot(pesticide_tidy, aes(x = Year, y = avg_pesticide)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n# Merge the pesticide_tidy, fertilizer_tidy, and labor_tidy dataframes by the 'Year' column\ncombined_tidy &lt;- left_join(pesticide_tidy, fertilizer_tidy, by = \"Year\") %&gt;%\n  left_join(labor_tidy, by = \"Year\")\n\n# Add a column for the time difference between each year and the previous year\ncombined_tidy &lt;- combined_tidy %&gt;%\n  mutate(years_elapsed = Year - min(Year))\n\n\n# View the updated dataframe\nhead(combined_tidy)\n\n# A tibble: 6 × 6\n   Year avg_pesticide avg_fertilizer avg_total_labor avg_hired_labor\n  &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;\n1  1960         0.218          0.948            2.50            2.12\n2  1961         0.247          0.986            2.44            2.12\n3  1962         0.270          0.939            2.45            2.11\n4  1963         0.279          1.06             2.35            2.11\n5  1964         0.298          1.18             2.21            1.90\n6  1965         0.296          1.25             2.15            1.79\n# ℹ 1 more variable: years_elapsed &lt;dbl&gt;\n\n\n\n# Plot the trend of pesticide use over time\nggplot(combined_tidy, aes(x = Year, y = avg_pesticide)) +\n  geom_line(color = \"orange\", size = 1.5, alpha = 0.7) +  # Add points with custom color, size, and transparency\n  labs(\n    title = \"Average Pesticide Use Over Time\",\n    subtitle = \"Trend of U.S. Average Pesticide Use by Year (1960-2004)\",\n    x = \"Year\",\n    y = \"Average Pesticide Use (Index)\",\n    caption = \"Source:U.S. Department of Agriculture, Economic Research Service. \"  # Optional caption for data source\n  ) +\n  theme_minimal() +  # Clean background\n  theme(\n    text = element_text(size = 12),  # Set base font size\n    axis.title = element_text(face = \"bold\"),  # Bold axis titles\n    axis.text = element_text(color = \"black\"),  # Color for axis labels\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),  # Centered title with larger font\n    plot.subtitle = element_text(hjust = 0.5, size = 12),  # Centered subtitle\n    plot.caption = element_text(hjust = 0, size = 10, face = \"italic\")  # Caption style\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n# Plot the trend of pesticide use over time\nggplot(combined_tidy, aes(x = Year, y = avg_fertilizer)) +\n  geom_line(color = \"darkgreen\", size = 1.5, alpha = 0.7) +  # Add points with custom color, size, and transparency\n  labs(\n    title = \"Average Fertilizer Use Over Time\",\n    subtitle = \" Trend of U.S. Average Fertilizer Use (1960-2004)\",\n    x = \"Year\",\n    y = \"Average Fertilizer Use (Index)\",\n    caption = \"Source:U.S. Department of Agriculture, Economic Research Service. \"  # Optional caption for data source\n  ) +\n  theme_minimal() +  # Clean background\n  theme(\n    text = element_text(size = 12),  # Set base font size\n    axis.title = element_text(face = \"bold\"),  # Bold axis titles\n    axis.text = element_text(color = \"black\"),  # Color for axis labels\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),  # Centered title with larger font\n    plot.subtitle = element_text(hjust = 0.5, size = 12),  # Centered subtitle\n    plot.caption = element_text(hjust = 0, size = 10, face = \"italic\")  # Caption style\n  )\n\n\n\n\n\n\n\n\n\n# Plot the trend of labor needs over time\nggplot(combined_tidy, aes(x = Year)) +\n  geom_line(aes(y = avg_total_labor, color = \"Total Labor\"), size = 1.5) +  # Line for avg_total_labor\n  geom_line(aes(y = avg_hired_labor, color = \"Hired Labor\"), size = 1.5) +  # Line for avg_hired_labor\n  scale_color_manual(values = c(\"Total Labor\" = \"blue\", \"Hired Labor\" = \"red\")) +  # Custom colors\n  labs(\n    title = \"Labor Inputs: Total vs. Hired Labor Over Time\",\n    subtitle = \"Trend of U.S. Average Total Labor and Hired Labor Input Indices (1960-2004)\",\n    x = \"Year\",\n    y = \"Labor Inputs (Index)\",\n    color = \"Labor Type\"  # Legend title\n  ) +\n  theme_minimal() +  # Clean theme\n  theme(\n    text = element_text(size = 12),  # Set base font size\n    axis.title = element_text(face = \"bold\"),  # Bold axis titles\n    axis.text = element_text(color = \"black\"),  # Axis labels color\n    legend.title = element_text(face = \"bold\"),  # Bold legend title\n    legend.position = \"top\",  # Position the legend at the top\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),  # Centered plot title with larger font size\n    plot.subtitle = element_text(hjust = 0.5, size = 12)  # Centered subtitle\n  )\n\n\n\n\n\n\n\n\n\nprint(n = 60, pesticide_tidy)\n\n# A tibble: 45 × 2\n    Year avg_pesticide\n   &lt;dbl&gt;         &lt;dbl&gt;\n 1  1960         0.218\n 2  1961         0.247\n 3  1962         0.270\n 4  1963         0.279\n 5  1964         0.298\n 6  1965         0.296\n 7  1966         0.324\n 8  1967         0.442\n 9  1968         0.445\n10  1969         0.491\n11  1970         0.505\n12  1971         0.574\n13  1972         0.661\n14  1973         0.682\n15  1974         0.702\n16  1975         0.741\n17  1976         0.883\n18  1977         0.801\n19  1978         1.04 \n20  1979         1.31 \n21  1980         1.28 \n22  1981         1.43 \n23  1982         1.38 \n24  1983         1.20 \n25  1984         1.45 \n26  1985         1.33 \n27  1986         1.33 \n28  1987         1.36 \n29  1988         1.23 \n30  1989         1.44 \n31  1990         1.47 \n32  1991         1.65 \n33  1992         1.70 \n34  1993         1.70 \n35  1994         1.72 \n36  1995         1.80 \n37  1996         1.98 \n38  1997         2.10 \n39  1998         2.06 \n40  1999         2.00 \n41  2000         2.03 \n42  2001         2.03 \n43  2002         1.96 \n44  2003         1.98 \n45  2004         1.98 \n\n\n\nprint(n = 60, labor_tidy)\n\n# A tibble: 62 × 3\n    Year avg_total_labor avg_hired_labor\n   &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;\n 1  1960           2.50            2.12 \n 2  1961           2.44            2.12 \n 3  1962           2.45            2.11 \n 4  1963           2.35            2.11 \n 5  1964           2.21            1.90 \n 6  1965           2.15            1.79 \n 7  1966           2.00            1.61 \n 8  1967           1.88            1.50 \n 9  1968           1.87            1.45 \n10  1969           1.84            1.46 \n11  1970           1.76            1.47 \n12  1971           1.73            1.46 \n13  1972           1.72            1.45 \n14  1973           1.71            1.47 \n15  1974           1.70            1.57 \n16  1975           1.67            1.59 \n17  1976           1.65            1.61 \n18  1977           1.60            1.57 \n19  1978           1.58            1.48 \n20  1979           1.60            1.53 \n21  1980           1.56            1.52 \n22  1981           1.56            1.51 \n23  1982           1.45            1.36 \n24  1983           1.43            1.50 \n25  1984           1.39            1.40 \n26  1985           1.28            1.27 \n27  1986           1.30            1.22 \n28  1987           1.33            1.24 \n29  1988           1.34            1.28 \n30  1989           1.30            1.20 \n31  1990           1.21            1.20 \n32  1991           1.22            1.19 \n33  1992           1.19            1.13 \n34  1993           1.14            1.12 \n35  1994           1.31            1.10 \n36  1995           1.32            1.13 \n37  1996           1.22            1.08 \n38  1997           1.21            1.14 \n39  1998           1.15            1.16 \n40  1999           1.14            1.21 \n41  2000           1.09            1.01 \n42  2001           1.09            1.02 \n43  2002           1.10            1.04 \n44  2003           1.06            1.01 \n45  2004           1.02            0.920\n46  2005           1.04            0.931\n47  2006           0.965           0.852\n48  2007           0.986           0.932\n49  2008           0.967           0.898\n50  2009           0.941           0.873\n51  2010           0.937           0.939\n52  2011           0.939           0.924\n53  2012           0.932           0.926\n54  2013           0.940           0.961\n55  2014           0.903           0.965\n56  2015           1               1    \n57  2016           1.01            1.05 \n58  2017           0.962           1.02 \n59  2018           0.950           1.03 \n60  2019           1.17            1.30 \n# ℹ 2 more rows\n\n\n\nprint(n = 60, fertilizer_tidy)\n\n# A tibble: 45 × 2\n    Year avg_fertilizer\n   &lt;dbl&gt;          &lt;dbl&gt;\n 1  1960          0.948\n 2  1961          0.986\n 3  1962          0.939\n 4  1963          1.06 \n 5  1964          1.18 \n 6  1965          1.25 \n 7  1966          1.41 \n 8  1967          1.38 \n 9  1968          1.14 \n10  1969          1.22 \n11  1970          1.25 \n12  1971          1.26 \n13  1972          1.25 \n14  1973          1.42 \n15  1974          1.58 \n16  1975          1.45 \n17  1976          1.72 \n18  1977          1.54 \n19  1978          1.57 \n20  1979          1.68 \n21  1980          2.08 \n22  1981          1.84 \n23  1982          1.43 \n24  1983          1.39 \n25  1984          1.58 \n26  1985          1.61 \n27  1986          1.78 \n28  1987          1.49 \n29  1988          1.39 \n30  1989          1.36 \n31  1990          1.48 \n32  1991          1.48 \n33  1992          1.52 \n34  1993          1.55 \n35  1994          1.56 \n36  1995          1.79 \n37  1996          1.90 \n38  1997          2.08 \n39  1998          2.48 \n40  1999          2.24 \n41  2000          2.39 \n42  2001          2.34 \n43  2002          2.53 \n44  2003          2.80 \n45  2004          2.62 \n\n\n\nprint(n = 60, combined_tidy)\n\n# A tibble: 45 × 6\n    Year avg_pesticide avg_fertilizer avg_total_labor avg_hired_labor\n   &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;\n 1  1960         0.218          0.948            2.50           2.12 \n 2  1961         0.247          0.986            2.44           2.12 \n 3  1962         0.270          0.939            2.45           2.11 \n 4  1963         0.279          1.06             2.35           2.11 \n 5  1964         0.298          1.18             2.21           1.90 \n 6  1965         0.296          1.25             2.15           1.79 \n 7  1966         0.324          1.41             2.00           1.61 \n 8  1967         0.442          1.38             1.88           1.50 \n 9  1968         0.445          1.14             1.87           1.45 \n10  1969         0.491          1.22             1.84           1.46 \n11  1970         0.505          1.25             1.76           1.47 \n12  1971         0.574          1.26             1.73           1.46 \n13  1972         0.661          1.25             1.72           1.45 \n14  1973         0.682          1.42             1.71           1.47 \n15  1974         0.702          1.58             1.70           1.57 \n16  1975         0.741          1.45             1.67           1.59 \n17  1976         0.883          1.72             1.65           1.61 \n18  1977         0.801          1.54             1.60           1.57 \n19  1978         1.04           1.57             1.58           1.48 \n20  1979         1.31           1.68             1.60           1.53 \n21  1980         1.28           2.08             1.56           1.52 \n22  1981         1.43           1.84             1.56           1.51 \n23  1982         1.38           1.43             1.45           1.36 \n24  1983         1.20           1.39             1.43           1.50 \n25  1984         1.45           1.58             1.39           1.40 \n26  1985         1.33           1.61             1.28           1.27 \n27  1986         1.33           1.78             1.30           1.22 \n28  1987         1.36           1.49             1.33           1.24 \n29  1988         1.23           1.39             1.34           1.28 \n30  1989         1.44           1.36             1.30           1.20 \n31  1990         1.47           1.48             1.21           1.20 \n32  1991         1.65           1.48             1.22           1.19 \n33  1992         1.70           1.52             1.19           1.13 \n34  1993         1.70           1.55             1.14           1.12 \n35  1994         1.72           1.56             1.31           1.10 \n36  1995         1.80           1.79             1.32           1.13 \n37  1996         1.98           1.90             1.22           1.08 \n38  1997         2.10           2.08             1.21           1.14 \n39  1998         2.06           2.48             1.15           1.16 \n40  1999         2.00           2.24             1.14           1.21 \n41  2000         2.03           2.39             1.09           1.01 \n42  2001         2.03           2.34             1.09           1.02 \n43  2002         1.96           2.53             1.10           1.04 \n44  2003         1.98           2.80             1.06           1.01 \n45  2004         1.98           2.62             1.02           0.920\n# ℹ 1 more variable: years_elapsed &lt;dbl&gt;\n\n\n\n# Create time-series plots for each variable\nggplot(combined_tidy, aes(x = Year, y = avg_pesticide)) +\n  geom_line() +\n  labs(title = \"Trend of Average Pesticide Use (1960-2004)\", x = \"Year\", y = \"Average Pesticide\") +\n  theme_minimal()\n\n\n\n\n\n\n\nggplot(combined_tidy, aes(x = Year, y = avg_fertilizer)) +\n  geom_line() +\n  labs(title = \"Trend of Average Fertilizer Use (1960-2004)\", x = \"Year\", y = \"Average Fertilizer\") +\n  theme_minimal()\n\n\n\n\n\n\n\nggplot(combined_tidy, aes(x = Year, y = avg_total_labor)) +\n  geom_line() +\n  labs(title = \"Trend of Total Labor Inputs (1960-2004)\", x = \"Year\", y = \"Average Total Labor\") +\n  theme_minimal()\n\n\n\n\n\n\n\nggplot(combined_tidy, aes(x = Year, y = avg_hired_labor)) +\n  geom_line() +\n  labs(title = \"Trend of Hired Labor Inputs (1960-2004)\", x = \"Year\", y = \"Average Hired Labor\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nlibrary(knitr)\nlibrary(dplyr)\n\n# Calculate the correlation matrix\ncor_matrix &lt;- cor(combined_tidy[, c(\"avg_pesticide\", \"avg_fertilizer\", \"avg_total_labor\", \"avg_hired_labor\")])\n\n# Convert the correlation matrix into a data frame for better table formatting\ncor_df &lt;- as.data.frame(cor_matrix)\n\n# Use kable() to display the correlation matrix as a table\nkable(cor_df, digits = 2, caption = \"Correlation Matrix of Agricultural Inputs (r)\", format = \"html\")\n\n\nCorrelation Matrix of Agricultural Inputs (r)\n\n\n\navg_pesticide\navg_fertilizer\navg_total_labor\navg_hired_labor\n\n\n\n\navg_pesticide\n1.00\n0.82\n-0.93\n-0.87\n\n\navg_fertilizer\n0.82\n1.00\n-0.76\n-0.72\n\n\navg_total_labor\n-0.93\n-0.76\n1.00\n0.96\n\n\navg_hired_labor\n-0.87\n-0.72\n0.96\n1.00\n\n\n\n\n\n\n\n\n# Scatter plots to examine relationships between pairs of variables\n\nggplot(combined_tidy, aes(x = avg_pesticide, y = avg_fertilizer)) +\n  geom_point() +\n  labs(title = \"Pesticide vs Fertilizer Use\", x = \"Average Pesticide\", y = \"Average Fertilizer\") +\n  theme_minimal()\n\n\n\n\n\n\n\nggplot(combined_tidy, aes(x = avg_total_labor, y = avg_hired_labor)) +\n  geom_point() +\n  labs(title = \"Total Labor vs Hired Labor\", x = \"Average Total Labor\", y = \"Average Hired Labor\") +\n  theme_minimal()\n\n\n\n\n\n\n\nggplot(combined_tidy, aes(x = avg_pesticide, y = avg_total_labor)) +\n  geom_point() +\n  labs(title = \"Pesticide Use vs Total Labor\", x = \"Average Pesticide\", y = \"Average Total Labor\") +\n  theme_minimal()\n\n\n\n\n\n\n\nggplot(combined_tidy, aes(x = avg_fertilizer, y = avg_hired_labor)) +\n  geom_point() +\n  labs(title = \"Fertilizer Use vs Hired Labor\", x = \"Average Fertilizer\", y = \"Average Hired Labor\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n# Multi-linear regression: Predicting avg_total_labor using pesticide_quartile and fertilizer_quartile\ntotal_labor_model &lt;- lm(avg_total_labor ~ avg_pesticide + avg_fertilizer + years_elapsed, data = combined_tidy)\n\n# View the summary of the model to interpret the coefficients\nsummary(total_labor_model)\n\n\nCall:\nlm(formula = avg_total_labor ~ avg_pesticide + avg_fertilizer + \n    years_elapsed, data = combined_tidy)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.17500 -0.10004 -0.05011  0.08482  0.31764 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)     2.095187   0.087895  23.837   &lt;2e-16 ***\navg_pesticide   0.065333   0.161786   0.404    0.688    \navg_fertilizer  0.095925   0.077624   1.236    0.224    \nyears_elapsed  -0.035219   0.008039  -4.381    8e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1313 on 41 degrees of freedom\nMultiple R-squared:  0.9029,    Adjusted R-squared:  0.8958 \nF-statistic: 127.1 on 3 and 41 DF,  p-value: &lt; 2.2e-16\n\n\n\n# A separate model predicting avg_total_labor using only avg_hired_labor\nhired_labor_model &lt;- lm(avg_hired_labor ~ avg_pesticide + avg_fertilizer + years_elapsed, data = combined_tidy)\n\n# View the summary of this model\nsummary(hired_labor_model)\n\n\nCall:\nlm(formula = avg_hired_labor ~ avg_pesticide + avg_fertilizer + \n    years_elapsed, data = combined_tidy)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.243498 -0.054767 -0.009707  0.060201  0.288865 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)     1.766551   0.084492  20.908  &lt; 2e-16 ***\navg_pesticide   0.298229   0.155522   1.918   0.0621 .  \navg_fertilizer  0.078994   0.074619   1.059   0.2960    \nyears_elapsed  -0.038025   0.007728  -4.920 1.45e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1262 on 41 degrees of freedom\nMultiple R-squared:  0.8485,    Adjusted R-squared:  0.8374 \nF-statistic: 76.52 on 3 and 41 DF,  p-value: &lt; 2.2e-16\n\n\n\n# Extract the summaries for both models\ntotal_labor_summary &lt;- summary(total_labor_model)$coefficients\nhired_labor_summary &lt;- summary(hired_labor_model)$coefficients\n\n# Convert to data frames for easier manipulation\ntotal_labor_df &lt;- as.data.frame(total_labor_summary)\ncolnames(total_labor_df) &lt;- c(\"Estimate\", \"Std. Error\", \"t value\", \"p-value\")\ntotal_labor_df$Variable &lt;- rownames(total_labor_df)\ntotal_labor_df$Model &lt;- \"Total Labor\"\n\nhired_labor_df &lt;- as.data.frame(hired_labor_summary)\ncolnames(hired_labor_df) &lt;- c(\"Estimate\", \"Std. Error\", \"t value\", \"p-value\")\nhired_labor_df$Variable &lt;- rownames(hired_labor_df)\nhired_labor_df$Model &lt;- \"Hired Labor\"\n\n# Remove row names (index) by resetting the row names to NULL\nrownames(total_labor_df) &lt;- NULL\nrownames(hired_labor_df) &lt;- NULL\n\n# Print the tables separately\ntotal_labor_table &lt;- kable(total_labor_df[, c(\"Variable\", \"Estimate\", \"Std. Error\", \"t value\", \"p-value\")],\n                           digits = 3, \n                           caption = \"Regression Coefficients for Total Labor Model\",\n                           format = \"html\")\n\nhired_labor_table &lt;- kable(hired_labor_df[, c(\"Variable\", \"Estimate\", \"Std. Error\", \"t value\", \"p-value\")],\n                            digits = 3,\n                            caption = \"Regression Coefficients for Hired Labor Model\",\n                            format = \"html\")\n\n# Print the tables\ntotal_labor_table\n\n\nRegression Coefficients for Total Labor Model\n\n\nVariable\nEstimate\nStd. Error\nt value\np-value\n\n\n\n\n(Intercept)\n2.095\n0.088\n23.837\n0.000\n\n\navg_pesticide\n0.065\n0.162\n0.404\n0.688\n\n\navg_fertilizer\n0.096\n0.078\n1.236\n0.224\n\n\nyears_elapsed\n-0.035\n0.008\n-4.381\n0.000\n\n\n\n\n\n\nhired_labor_table\n\n\nRegression Coefficients for Hired Labor Model\n\n\nVariable\nEstimate\nStd. Error\nt value\np-value\n\n\n\n\n(Intercept)\n1.767\n0.084\n20.908\n0.000\n\n\navg_pesticide\n0.298\n0.156\n1.918\n0.062\n\n\navg_fertilizer\n0.079\n0.075\n1.059\n0.296\n\n\nyears_elapsed\n-0.038\n0.008\n-4.920\n0.000\n\n\n\n\n\n\n\n\n# Load required libraries\nlibrary(ggplot2)\nlibrary(gridExtra)\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n# Create the plot for Total Labor Model\ntotal_labor_plot &lt;- ggplot(combined_tidy, aes(x = Year, y = avg_total_labor)) +\n  geom_point(color = \"blue\", size = 2) +  # Scatter plot for avg_total_labor\n  geom_smooth(method = \"lm\", formula = y ~ x, color = \"red\", linetype = \"solid\") +  # Regression line for total_labor_model\n  labs(title = \"Total Labor vs Year\", x = \"Year\", y = \"Average Total Labor\") +\n  theme_minimal()\n\n# Create the plot for Hired Labor Model\nhired_labor_plot &lt;- ggplot(combined_tidy, aes(x = Year, y = avg_hired_labor)) +\n  geom_point(color = \"green\", size = 2) +  # Scatter plot for avg_hired_labor\n  geom_smooth(method = \"lm\", formula = y ~ x, color = \"purple\", linetype = \"solid\") +  # Regression line for hired_labor_model\n  labs(title = \"Hired Labor vs Year\", x = \"Year\", y = \"Average Hired Labor\") +\n  theme_minimal()\n\n# Display both plots side by side\n\ngrid.arrange(total_labor_plot, hired_labor_plot, ncol = 2)\n\n\n\n\n\n\n\n\n\n# 1. Scatter plot for Total Labor (avg_total_labor) vs. Pesticide use (avg_pesticide)\nggplot(combined_tidy, aes(x = avg_pesticide, y = avg_total_labor)) +\n  geom_point() +  # Scatter plot\n  geom_smooth(method = \"lm\", color = \"blue\", se = FALSE) +  # Regression line for total labor\n  labs(title = \"Total Labor vs. Pesticide Use\", \n       x = \"Average Pesticide Use\", \n       y = \"Average Total Labor\",\n       caption = \"Regression line (Total Labor)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    plot.caption = element_text(hjust = 0.5, size = 12),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# 2. Scatter plot for Total Labor (avg_total_labor) vs. Fertilizer use (avg_fertilizer)\nggplot(combined_tidy, aes(x = avg_fertilizer, y = avg_total_labor)) +\n  geom_point() +  # Scatter plot\n  geom_smooth(method = \"lm\", color = \"green\", se = FALSE) +  # Regression line for total labor\n  labs(title = \"Total Labor vs. Fertilizer Use\", \n       x = \"Average Fertilizer Use\", \n       y = \"Average Total Labor\",\n       caption = \"Regression line (Total Labor)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    plot.caption = element_text(hjust = 0.5, size = 12),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# 3. Scatter plot for Hired Labor (avg_hired_labor) vs. Pesticide use (avg_pesticide)\nggplot(combined_tidy, aes(x = avg_pesticide, y = avg_hired_labor)) +\n  geom_point() +  # Scatter plot\n  geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +  # Regression line for hired labor\n  labs(title = \"Hired Labor vs. Pesticide Use\", \n       x = \"Average Pesticide Use\", \n       y = \"Average Hired Labor\",\n       caption = \"Regression line (Hired Labor)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    plot.caption = element_text(hjust = 0.5, size = 12),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# 4. Scatter plot for Hired Labor (avg_hired_labor) vs. Fertilizer use (avg_fertilizer)\nggplot(combined_tidy, aes(x = avg_fertilizer, y = avg_hired_labor)) +\n  geom_point() +  # Scatter plot\n  geom_smooth(method = \"lm\", color = \"green\", se = FALSE) +  # Regression line for hired labor\n  labs(title = \"Hired Labor vs. Fertilizer Use\", \n       x = \"Average Fertilizer Use\", \n       y = \"Average Hired Labor\",\n       caption = \"Regression line (Hired Labor)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    plot.caption = element_text(hjust = 0.5, size = 12),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# 5. Scatter plot for Total Labor vs. Years Elapsed\nggplot(combined_tidy, aes(x = years_elapsed, y = avg_total_labor)) +\n  geom_point() +  # Scatter plot\n  geom_smooth(method = \"lm\", color = \"blue\", se = FALSE) +  # Regression line for total labor\n  labs(title = \"Total Labor vs. Years Elapsed\", \n       x = \"Years Elapsed\", \n       y = \"Average Total Labor\",\n       caption = \"Regression line (Total Labor)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    plot.caption = element_text(hjust = 0.5, size = 12),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n# 6. Scatter plot for Hired Labor vs. Years Elapsed\nggplot(combined_tidy, aes(x = years_elapsed, y = avg_hired_labor)) +\n  geom_point() +  # Scatter plot\n  geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +  # Regression line for hired labor\n  labs(title = \"Hired Labor vs. Years Elapsed\", \n       x = \"Years Elapsed\", \n       y = \"Average Hired Labor\",\n       caption = \"Regression line (Hired Labor)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    plot.caption = element_text(hjust = 0.5, size = 12),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  ) \n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\nCitationBibTeX citation:@online{carroll2024,\n  author = {Carroll, Stephen},\n  title = {Examing the {Impact} on {Fertilizer} \\& {Pesticide} {Use} on\n    {Agricultural} {Labor} {Needs}},\n  date = {2024-10-18},\n  url = {https://stephenccodes.github.io/blog/fertilizer-pesticides-and-labor/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nCarroll, Stephen. 2024. “Examing the Impact on Fertilizer &\nPesticide Use on Agricultural Labor Needs.” October 18, 2024. https://stephenccodes.github.io/blog/fertilizer-pesticides-and-labor/."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "some text goes here"
  },
  {
    "objectID": "about.html#what-i-do-for-work",
    "href": "about.html#what-i-do-for-work",
    "title": "About",
    "section": "",
    "text": "some text goes here"
  },
  {
    "objectID": "about.html#what-i-do-for-fun",
    "href": "about.html#what-i-do-for-fun",
    "title": "About",
    "section": "What I do for fun",
    "text": "What I do for fun\n\nsome text goes here\n\nhere is some more text\n\ncenter text here"
  },
  {
    "objectID": "blog_posts/2024-10-18-my-first-post/index.html",
    "href": "blog_posts/2024-10-18-my-first-post/index.html",
    "title": "Blog post 1",
    "section": "",
    "text": "I’m going to insert a footnote here1"
  },
  {
    "objectID": "blog_posts/2024-10-18-my-first-post/index.html#this-is-my-first-section",
    "href": "blog_posts/2024-10-18-my-first-post/index.html#this-is-my-first-section",
    "title": "Blog post 1",
    "section": "",
    "text": "I’m going to insert a footnote here1"
  },
  {
    "objectID": "blog_posts/2024-10-18-my-first-post/index.html#this-is-my-second",
    "href": "blog_posts/2024-10-18-my-first-post/index.html#this-is-my-second",
    "title": "Blog post 1",
    "section": "This is my second",
    "text": "This is my second\nHere’s my next paragraph2\nI’m citing me(Csik 2022)\nHere is more random text. I’m going to cite a journal article now.(Gaynor et al. 2022)"
  },
  {
    "objectID": "blog_posts/2024-10-18-my-first-post/index.html#footnotes",
    "href": "blog_posts/2024-10-18-my-first-post/index.html#footnotes",
    "title": "Blog post 1",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nHere is a new footnote↩︎\nHere is my second footnote↩︎"
  },
  {
    "objectID": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html",
    "href": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html",
    "title": "An Analysis of the 2017 Thomas Fire",
    "section": "",
    "text": "Image credit: kcbx.org\nAuthor: Stephen Carroll\nThis project repository can be found at: https://github.com/stephenccodes/thomas-fire-analysis\n\n\n\n\n\nThe intent of this notebook is to analyze two components of the 2017 Thomas Fire:\n\nuse remote sensing and fire perimeter data to create a false-color map of the fire and the surrounding area.\nuse air quality index (AQI) data to visualize the effect the fire had on air quality in surrounding communities.\n\nThis analysis examines the impact of the 2017 Thomas Fire on air quality in Santa Barbara County. The Thomas Fire burned over 280,000 acres in Ventura and Santa Barbara counties in December 2017, causing significant ecological & environmental damage and displacing communities. Wildfire smoke is a well-known health hazard, and one way to assess its impact is through air quality index measurements. The air quality index (AQI) is used to measure air pollution levels and is a scale ranging from 0 to 500. Scores between 0-50 are considered good, while those from 151-200 are unhealthy, and 301-500 are hazardous. This analysis will use AQI data to explore how the Thomas Fire influenced air quality and environmental health in Santa Barbara County.\nTo visualize these effects, the analysis will include a map that highlights the fire scar and distinguishes areas with vegetation or bare soil, providing a contrast to a true-color image. Additionally, AQI data will be represented in a line graph, illustrating how the fire impacted air quality over time. These insights will be drawn using various data analysis techniques outlined below.\n\n\n\n\nImport, clean, and manipulate a vector dataset\nClean data using pandas\nImport, clean, and manipulate an xarray dataset\nCreate a set of plots of the area in true and false-color without creating new variables\nRemove outlier values by adjusting the scale with the robust parameter.\nImport existing geo-data frame and implement it\nCreate a polished map of the false-color image, with superimposed fire perimeter\n\n\n\n\n\n\nThis data is a simplified collection of bands (red, green, blue, near-infrared, and shortwave infrared) from the Landsat Collection 2 Level-2 atmospherically corrected surface reflectance data, collected by the Landsat 8 satellite. The data was retrieved from the Microsoft Planetary Computer data catalogue and pre-processed to remove data outside land and coarsen the spatial resolution.\nDate accessed: 11/19/24\n\n\n\nThis database contains information about spatial distribution of historic wild and prescribed fires in the state of California. The data comes with a warning that it is not comprehensive, with some records lost or damaged, fire perimeters may be missing. There may also be duplicate fires and over-generalization of fire perimeters. The database is maintained by the California Department of Forestry and Fire Protection’s Fire and Resource Assessment Program.\nDate accessed: 11/19/24\n\n\n\nThese are two datasets that have daily air quality index (AQI) measurements for each county in California. We will use data for the years 2017 and 2018. The Thomas Fire was in late 2017, so it will help to understand the impact by setting a reference for ‘normal’ conditions before and after the fire occurred. The data was collected for airgov.now on behalf of the Environmental Protection Agency.\nDate accessed: 10/26/24"
  },
  {
    "objectID": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#a-visualization-of-the-extent-and-aqi-impact",
    "href": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#a-visualization-of-the-extent-and-aqi-impact",
    "title": "An Analysis of the 2017 Thomas Fire",
    "section": "",
    "text": "Image credit: kcbx.org\nAuthor: Stephen Carroll\nThis project repository can be found at: https://github.com/stephenccodes/thomas-fire-analysis"
  },
  {
    "objectID": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#about",
    "href": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#about",
    "title": "An Analysis of the 2017 Thomas Fire",
    "section": "",
    "text": "The intent of this notebook is to analyze two components of the 2017 Thomas Fire:\n\nuse remote sensing and fire perimeter data to create a false-color map of the fire and the surrounding area.\nuse air quality index (AQI) data to visualize the effect the fire had on air quality in surrounding communities.\n\nThis analysis examines the impact of the 2017 Thomas Fire on air quality in Santa Barbara County. The Thomas Fire burned over 280,000 acres in Ventura and Santa Barbara counties in December 2017, causing significant ecological & environmental damage and displacing communities. Wildfire smoke is a well-known health hazard, and one way to assess its impact is through air quality index measurements. The air quality index (AQI) is used to measure air pollution levels and is a scale ranging from 0 to 500. Scores between 0-50 are considered good, while those from 151-200 are unhealthy, and 301-500 are hazardous. This analysis will use AQI data to explore how the Thomas Fire influenced air quality and environmental health in Santa Barbara County.\nTo visualize these effects, the analysis will include a map that highlights the fire scar and distinguishes areas with vegetation or bare soil, providing a contrast to a true-color image. Additionally, AQI data will be represented in a line graph, illustrating how the fire impacted air quality over time. These insights will be drawn using various data analysis techniques outlined below.\n\n\n\n\nImport, clean, and manipulate a vector dataset\nClean data using pandas\nImport, clean, and manipulate an xarray dataset\nCreate a set of plots of the area in true and false-color without creating new variables\nRemove outlier values by adjusting the scale with the robust parameter.\nImport existing geo-data frame and implement it\nCreate a polished map of the false-color image, with superimposed fire perimeter\n\n\n\n\n\n\nThis data is a simplified collection of bands (red, green, blue, near-infrared, and shortwave infrared) from the Landsat Collection 2 Level-2 atmospherically corrected surface reflectance data, collected by the Landsat 8 satellite. The data was retrieved from the Microsoft Planetary Computer data catalogue and pre-processed to remove data outside land and coarsen the spatial resolution.\nDate accessed: 11/19/24\n\n\n\nThis database contains information about spatial distribution of historic wild and prescribed fires in the state of California. The data comes with a warning that it is not comprehensive, with some records lost or damaged, fire perimeters may be missing. There may also be duplicate fires and over-generalization of fire perimeters. The database is maintained by the California Department of Forestry and Fire Protection’s Fire and Resource Assessment Program.\nDate accessed: 11/19/24\n\n\n\nThese are two datasets that have daily air quality index (AQI) measurements for each county in California. We will use data for the years 2017 and 2018. The Thomas Fire was in late 2017, so it will help to understand the impact by setting a reference for ‘normal’ conditions before and after the fire occurred. The data was collected for airgov.now on behalf of the Environmental Protection Agency.\nDate accessed: 10/26/24"
  },
  {
    "objectID": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#true-color-image",
    "href": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#true-color-image",
    "title": "An Analysis of the 2017 Thomas Fire",
    "section": "True Color Image",
    "text": "True Color Image\n\nConstruct a file path to the Landsat data and read it in:\n\n# Import libraries\nimport os\nimport numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\n\n# Establish a file path for the landsat data\nfp = os.path.join('data/landsat8-2018-01-26-sb-simplified.nc')\n\n# Import the landsat data\nlandsat = rioxr.open_rasterio(fp)\n\n\n\nData Exploration\n\n# Find the CRS of the landsat data\nprint('CRS', landsat.rio.crs)\n\n# Find the dimensions of the landsat data\nprint('Height: ', landsat.rio.height)\nprint('Width: ', landsat.rio.width)\n\n# Find the data type of the landsat data\nprint('Data type: \\n', landsat.dtypes)\n\n# Find the geographic extent of the landsat data\nprint(landsat.rio.bounds(), '\\n')\n\nCRS EPSG:32611\nHeight:  731\nWidth:  870\nData type: \n Frozen({'red': dtype('float64'), 'green': dtype('float64'), 'blue': dtype('float64'), 'nir08': dtype('float64'), 'swir22': dtype('float64')})\n(121170.0, 3755160.0, 356070.0, 3952530.0) \n\n\n\n\n\nData Exploration Summary:\nTo begin, I viewed the landsat data to learn more about it. It has the variables ‘Red’, ‘Green’, ‘Blue’, ‘nir08’, and ‘swir12’. These variables represent energy bands, and the last two variables have unique names but are assumed to represent near-infrared and short wave infrared bands. I found the coordinate reference system(CRS) used and printed the height(731) and width(870) of the dataset. I listed the data types for each variable, as well as the geographic boundary of the data.\n\n\nDrop the band dimension of the data:\n\n# Remove the first dimension(band) and drop the associated coordinates\nlandsat = landsat.squeeze().drop_vars('band')\n\n\n\nSelect the red, green, and blue variables and convert it to an array and plot it:\n\n\nAdjust the scale used for plotting the bands to get a true color image and plot it again:\n\n# Remove the exterem values caused by cloud cover and plot it again\nlandsat[['red', 'green', 'blue']].to_array().plot.imshow(robust = True)\n\n\n\n\n\n\n\n\n\n\nA note on extreme outliers in your data:\nInitially, my plot displayed all of the values present, including extreme values caused by clouds or other interference. These extreme values affected the color scale, with most values rendering as either black or white. To remedy this, I adjusted to avoid the influence of these extreme values. When you set robust = True, the only values displayed are from the 2nd to 98th percentiles, allowing the color scale to better represent the meaningful range of values."
  },
  {
    "objectID": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#false-color-image",
    "href": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#false-color-image",
    "title": "An Analysis of the 2017 Thomas Fire",
    "section": "False color image",
    "text": "False color image\n\nPlot the short-wave infrared(swir22), near-infrared(nir08, and red variables:\nIn the true color image above, the fire scar is difficult to see. To better visualize the extent of thew fire, we can use Red, Green, and Blue hues to display other parts of the EM spectrum. In this case, we will substitue the true colors for short-wave infrared(swir22), near-infrared(nir08, and red variables.\n\n# Use SWIR, NIR, and Red wavelengths to viaulize the vegetation and burn areas better\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(robust = True)"
  },
  {
    "objectID": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#false-color-composite-map",
    "href": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#false-color-composite-map",
    "title": "An Analysis of the 2017 Thomas Fire",
    "section": "False Color Composite Map",
    "text": "False Color Composite Map\n\nImport Thomas Fire perimeter and convert the CRS to match Landsat data:\n\n# Read in the Thomas fire data and convert CRS to match the landsat data\nthomas_fire = gpd.read_file('data/thomas_fire/thomas_fire.shp').to_crs(landsat.rio.crs)\n\n# Confirm the change was successful\nassert landsat.rio.crs == thomas_fire.crs\n\n\n\nCombine both elements to create a composite map:\nWe can use the border of the data and the false color image we jsut created ti make a composite map that does a great job of highlighting exactly where the 2017 Thomas Fire burned.\n\n# Define the landsat aspect ratio\nlandsat_aspect_ratio = landsat.rio.width / landsat.rio.height \n\n# Initialize the figure and set the dimensions\nfig, ax = plt.subplots(figsize = (9, 5 * landsat_aspect_ratio)) # Apply the aspect ratio\n\n# Set the background color of the entire figure \nfig.patch.set_facecolor('beige')\n\n# Remove axes for cleaner map\nax.axis('off') \n\n# Plot the false color remorte sensing data\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(robust = True, ax = ax)\n\n# Plot the Thomas Fire perimeter\nthomas_fire.boundary.plot(ax = ax, \n                          color = \"red\", # Color it red for emphasis\n                          linewidth = 0.8)\n\n# Add a main title\nax.set_title(\"The 2017 Thomas Fire Scar\\n\", fontsize = 12)\n\n# Add subtitle describing the false colors\nfig.suptitle(\"False Colors with Short Wave Infrared, Near-Infrared, & Red Wavelengths\", \n             color = 'black', \n             fontsize = 10, \n             fontweight='light', \n             y=0.91)\n\n# Add a legend for the fire boundary\nax.legend(labels = ['Thomas Fire (2017) Scar'])\n\n# Add a footnote citation at the bottom of the figure\nfig.text(0.379, 0.1, # Position\n         'Data Source: CAL FIRE & USGS EROS Archive',\n         ha='center', # Horizontal alignment\n         va='center', # Vertical alignment\n         fontsize=8, \n         color='black', \n         fontstyle='italic')\nfig.text(0.395, 0.08, # Position \n         'Date Accessed: 11/19/24',\n         ha='right', # Horizontal alignment\n         va='center', # Vertical alignment\n         fontsize=8, \n         color='black', \n         fontstyle='italic')\n\nplt.show()\n\n\n\n\n\n\n\n\n\n\nMap Description:\nThe figure above displays the area burned during the 2017 Thomas Fire, as well as surrounding areas. The area outlined in red represents the extent of the fire perimeter. This is a false color image, with Short Wave Infrared(SWIR), Near-Infrared(NIR), and Red energy bands being visualized with Red, Green, and Blue colors, respectively.\nThe burn scar is displayed as red, because newly burned land reflects strongly in SWIR bands. The areas of the map that have vegetation are depicted by green colors, as vegetation reflect near-infrared light strongly, with healthy plants reflecting more than stressed plants. Accordingly, since the chlorophyll in plants absorbs red light, very little of the repesentative blue is displayed here."
  },
  {
    "objectID": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#data-visualization",
    "href": "blog_posts/thomas-fire-analysis/thomas_fire_analysis.html#data-visualization",
    "title": "An Analysis of the 2017 Thomas Fire",
    "section": "Data visualization:",
    "text": "Data visualization:\nNow we can plot the AQ! and 5-day average over time to see how the 2017 Thomas Fire impacted it.\n\n# Initialize a figure and axis \nfig, ax = plt.subplots(figsize = (12, 8)) # Set dimensions relatively wide to space out lines\n\n# Visualize air quality during the Thomas Fire\naqi_sb.aqi.plot(ax=ax, label = 'AQI')\naqi_sb.five_day_average.plot(ax=ax, label = \"Five day AQI average\")\n\n# Show the date for the Thomas fire\nplt.axvline(x = '2017-12-04', \n            color = 'red', \n            linestyle = 'dashed', \n            label = \"Thomas Fire\")\n\n# Labels\n# Title describing the area and event of interest\nax.set_title('2017 Thomas Fire in Santa Barbara & Ventura County', \n             color = 'black', \n             fontsize = 12, \n             fontweight='normal', \n             y=0.99)\n\n# Subtitle describing the plot\nfig.suptitle('Daily AQI and 5-day AQI averages:', \n             color = 'black', \n             fontsize = 12, \n             fontweight='heavy', \n             y=0.93)\n\nax.set_xlabel('Date')\nax.set_ylabel('AQI')\nax.legend()\n\n# Display the figure\nplt.show()\n\n\n\n\n\n\n\n\n\nReference List:\n\nU.S. Geological Survey. (n.d.). Landsat 8-9 OLI/TIRS collection 2 level-2 science products | USGS EROS Archive. U.S. Geological Survey. https://www.usgs.gov/centers/eros/science/usgs-eros-archive-landsat-archives-landsat-8-9-olitirs-collection-2-level-2 Access date: November 19, 2024.\nData.gov. (2024). California fire perimeters (ALL). Data.gov. https://catalog.data.gov/dataset/california-fire-perimeters-all-b3436 Access date: November 19, 2024.\nAirnow.gov. (2017-2018). US Environmental Protection Agency. Air Quality Index (AQI) data from the US Environmental Protection Agency Access date: October 26, 2024.\n\n\n\nAcknowledgements\nAll materials were created by Carmen Galaz-Garcia for EDS-220: Working with Environmental Data."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stephen Carroll",
    "section": "",
    "text": "Stephen Carroll holds a Master in Environmental Data Science degree from the Bren School of Environmental Management at UC Santa Barbara. Stephen became passionate about environmental studies as an undergraduate at UC Santa Cruz, where he interned with the UC Natural Reserve System, working to restore coastal prairie habitat. After graduating with an Anthropology degree in 2014, Stephen worked in agriculture, first, at an agri-tech startup with a mission to transform local food systems through vertical hydroponic farms, and later, at an organic farm, where he served in a leadership position and developed efficient approaches to workflow and logistics with the goal of reducing waste and costly inputs. Stephen also earned a certificate in microscopy and soil science, developing expertise in the microbiological processes that underpin the distinct agricultural operations in which he has taken part. He is excited to use his skills in data analysis, statistics, and programming to deepen his knowledge of conservation, waste management, and agroecology. After graduate school, he intends to use data science to find practical solutions to universal problems."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Stephen Carroll",
    "section": "Education",
    "text": "Education\nsome text here"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Stephen Carroll",
    "section": "Experience",
    "text": "Experience\nsome text here"
  },
  {
    "objectID": "index.html#skills",
    "href": "index.html#skills",
    "title": "Stephen Carroll",
    "section": "Skills",
    "text": "Skills\nsome text here"
  }
]